// -------------------------------------------------------------------------
// SCSS Variables
//----------------------------------------------------------------------------

//maximum width of container element, can be set to 100% if you want full screen.
$wrapper-width: 71.5em;

//Select how many columns you want in your grid. 12, 24 etc.
$columns: 12;
$ratio: 1.618;

//Adds unit measurement to $ratio value.
$margin-side: ($ratio / 2) + em;
$margin-bottom: $ratio + em;

//Breakpoint values
$extsm-bp: 	25em;
$sm-bp: 	31.25em;
$med-bp: 	50em;
$lg-bp: 	62.5em;

html {
  box-sizing: border-box;
  overflow-x: hidden;
}

*, *:before, *:after {
  box-sizing: inherit;
}

/* -------------------------------------------------------------------------
 Grid System
---------------------------------------------------------------------------- */

.grid_row{
    display: block;
    clear: both;
    *zoom: 1;
    margin: 0 (-$margin-side);
}
.grid_row{
    zoom: 1;
    position: relative;
}

.grid_row .grid_row{
    margin: 0;
}

.grid_row:before,
.grid_row:after {
    content: " ";
    display: table;
}

.grid_row:after {
    clear: both;
}

[class^=grid_col]{
    width: 100%;
    margin-bottom: $margin-bottom;
}

.grid_content{
    background-color: #ffcc66;
    word-wrap: break-word;
    margin: 0 $margin-side;
    padding: 0 $margin-side;
}


/* -------------------------------------------------------------------------
 Layout Columns
---------------------------------------------------------------------------- */



[class*=grid_offset]{
    float:none;
}

@media screen and (min-width: $extsm-bp) {

	[class^=grid_col]{
	    float: left;
	}

	[class^=grid_col] [class^=grid_col]{
    	margin-bottom: 0;
	}
	
	@for $i from 1 through $columns {
        $val: ( 100% / $columns ) * $i;

        .grid_col_extsm-#{$i}_#{$columns} {
           width: $val;
            @if $i == $columns {
        		float: none;
        	}
        }
    }

}// END EXTRA SMALL BREAKPOINT

@media screen and (min-width: $sm-bp) {
	
	@for $i from 1 through $columns {
        $val: ( 100% / $columns ) * $i;

        .grid_col_sm-#{$i}_#{$columns} {
           width: $val;
            @if $i == $columns {
        		float: none;
        	}
        }
    }

}//END SMALL BREAKPOINT


@media screen and (min-width: $med-bp) {

    @for $i from 1 through $columns {
        $val: ( 100% / $columns ) * $i;

        .grid_col_med-#{$i}_#{$columns} {
           width: $val;
            @if $i == $columns {
        		float: none;
        	}
        }
    }

    .grid_col-ratio_1_3{
        width: percentage( ( 1 - ( 1 / $ratio ) ) );
    }

    .grid_col-ratio_2_3{
        width: percentage( 1 / $ratio );
    }


}//END MEDIUM BREAKPOINT


@media screen and (min-width: $lg-bp) {

	@for $i from 1 through $columns {
        $val: ( 100% / $columns ) * $i;

        .grid_col_lg-#{$i}_#{$columns} {
            width: $val;
            @if $i == $columns {
        		float: none;
        	}
        }
    }

}// END LARGE BREAKPOINT


/* -------------------------------------------------------------------------
 Layout grid_Offset Columns
---------------------------------------------------------------------------- */

@media screen and (min-width: $extsm-bp) {
        @for $i from 1 through ($columns - 1) {
        
        $val: ( 100% / $columns ) * $i;

        .grid_offset_extsm-#{$i}_#{$columns} {
            margin-left: $val;
        }

        .grid_offset_extsm-reset{
            margin-left: 0;
        }

    }
}

@media screen and (min-width: $sm-bp) {
        @for $i from 1 through ($columns - 1) {
        
        $val: ( 100% / $columns ) * $i;

        .grid_offset_sm-#{$i}_#{$columns} {
            margin-left: $val;
        }

        .grid_offset_sm-reset{
            margin-left: 0;
        }


    }
}

@media screen and (min-width: $med-bp) {

    @for $i from 1 through ($columns - 1) {
        
        $val: ( 100% / $columns ) * $i;

        .grid_offset_med-#{$i}_#{$columns} {
            margin-left: $val;
        }

        .grid_offset_med-reset{
            margin-left: 0;
        }


    }
}

@media screen and (min-width: $lg-bp) {
        @for $i from 1 through ($columns - 1) {
        
        $val: ( 100% / $columns ) * $i;

        .grid_offset_lg-#{$i}_#{$columns} {
            margin-left: $val;
        }

        .grid_offset_lg-reset{
            margin-left: 0;
        }


    }
}


/* -------------------------------------------------------------------------
 Content Columns
---------------------------------------------------------------------------- */

@media screen and (min-width: $extsm-bp) {
	@for $i from 1 through $columns {
        $val: ( 100% / $columns ) * $i;

        .grid_col_extsm-1_#{$columns - $i + 1} {
            width: (100% / ($columns - $i + 1) );
            @if $i == $columns { float: none; }
        }
    }
}

@media screen and (min-width: $sm-bp) {
	@for $i from 1 through $columns {
        $val: ( 100% / $columns ) * $i;

        .grid_col_sm-1_#{$columns - $i + 1} {
            width: (100% / ($columns - $i + 1) );
            @if $i == $columns { float: none; }
        }
    }
}


@media screen and (min-width: $med-bp) {
	@for $i from 1 through $columns {
        $val: ( 100% / $columns ) * $i;

        .grid_col_med-1_#{$columns - $i + 1} {
            width: (100% / ($columns - $i + 1) );
            @if $i == $columns { float: none; }
        }
    }
}

@media screen and (min-width: $lg-bp) {
	@for $i from 1 through $columns {
        $val: ( 100% / $columns ) * $i;

        .grid_col_lg-1_#{$columns - $i + 1} {
            width: (100% / ($columns - $i + 1) );
            @if $i == $columns { float: none; }
        }
    }
}


/* -------------------------------------------------------------------------
 Content Offset Columns
---------------------------------------------------------------------------- */

@media screen and (min-width: $extsm-bp) {
    $i: $columns;

    @while $i > 1 {

        @for $j from 1 through $i - 1 {

            $margin: ( 100% / $i ) * $j;

            .grid_offset_extsm-#{$j}_#{$i} {
                margin-left: $margin;
            }
        } //END FOR

        $i: $i - 1;

    } //END WHILE 
}

@media screen and (min-width: $sm-bp) {
    $i: $columns;

    @while $i > 1 {

        @for $j from 1 through $i - 1 {

            $margin: ( 100% / $i ) * $j;

            .grid_offset_sm-#{$j}_#{$i} {
                margin-left: $margin;
            }
        } //END FOR

        $i: $i - 1;

    } //END WHILE 
}


@media screen and (min-width: $med-bp) {

    $i: $columns;

    @while $i > 1 {

        @for $j from 1 through $i - 1 {

            $margin: ( 100% / $i ) * $j;

            .grid_offset_med-#{$j}_#{$i} {
                margin-left: $margin;
            }
        } //END FOR

        $i: $i - 1;

    } //END WHILE 

}

@media screen and (min-width: $lg-bp) {
    $i: $columns;

    @while $i > 1 {

        @for $j from 1 through $i - 1 {

            $margin: ( 100% / $i ) * $j;

            .grid_offset_lg-#{$j}_#{$i} {
                margin-left: $margin;
            }
        } //END FOR

        $i: $i - 1;

    } //END WHILE 
}


/* -------------------------------------------------------------------------
 Grid Helper Classes
---------------------------------------------------------------------------- */

.float-left{
    float: left;
}

.float-right{
    float: right;
}

.grid_col-last{
   width: auto !important;
   float: none !important;
   overflow: hidden !important;
}

@media screen and (min-width: $extsm-bp) {
    .grid_col_extsm-last{
       width: auto !important;
       float: none !important;
       overflow: hidden !important;
    }
}

@media screen and (min-width: $sm-bp) {
    .grid_col_sm-last{
       width: auto !important;
       float: none !important;
       overflow: hidden !important;
    }
}


@media screen and (min-width: $med-bp) {
    .grid_col_med-last{
       width: auto !important;
       float: none !important;
       overflow: hidden !important;
    }
}

@media screen and (min-width: $lg-bp) {
    .grid_col_lg-last{
       width: auto !important;
       float: none !important;
       overflow: hidden !important;
    }
}

[class^=grid_col] [class^=grid_col].grid_col-last, 
[class^=grid_col] [class^=grid_col]:last-child {
    margin-bottom: 0;
}

.wrapper{
    max-width: $wrapper-width;
    margin: 0 auto;
}

.wrapper-full{
    max-width: 100%;
}

/* -------------------------------------------------------------------------
 Presentation only
---------------------------------------------------------------------------- */

.pres-spacing{
    height: 100px;
}

.pres-heading{
    line-height: 100px;
}

.color{
    background-color: #ffcc66;
}

/*[class^=col]:nth-child(odd) .grid-content{
    background-color: #ffcc66;
}*/

[class^=grid_col] h3{
    text-align: center;
    padding: 0;
    margin: 0;
    line-height: 40px;
    font-size: 13px;
}

