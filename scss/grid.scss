// -------------------------------------------------------------------------
// SCSS Variables
//----------------------------------------------------------------------------

//maximum width of container element, can be set to 100% if you want full screen.
$container-width: 71.25em;

//Select how many columns you want in your grid. 12, 24 etc.
$columns: 12;
$ratio: 1.618;
$half: $ratio;

//Adds unit measurement to $ratio value.

$padding-side: $half + em;
$padding-bottom: $ratio + em;
$exsm-bp: 25em;
$sm-bp: 31.25em;
$med-bp: 800px;
$lg-bp: 1000px;


/* -------------------------------------------------------------------------
 Grid System
---------------------------------------------------------------------------- */


.container{
    max-width: $container-width;
    margin: 0 auto;
    font-size: 100%;
}
.row{
    display: block;
    clear: both;
    *zoom: 1;
}

.row:before,
.row:after {
    content: " ";
    display: table;
}

.row:after {
    clear: both;
}

.centered-row{
    display: inline;
}

[class|=col]{
    width: 100%;
}

.grid-content{
    background-color: #ffcc66;
    margin: 0 $padding-side;
    word-wrap: break-word;
    margin-bottom: $padding-bottom;
}

[class|=col] [class|=col]:last-child{
    margin-bottom: 0;
}

.full-width{
    padding-right: 0;
    padding-left: 0;
}



/* -------------------------------------------------------------------------
 Even Column Layout
---------------------------------------------------------------------------- */

@media screen and (min-width: $exsm-bp) {
}

@media screen and (min-width: $sm-bp) {

}


@media screen and (min-width: $med-bp) {

    [class|=col]{
        float: left;
    }

    @for $i from 1 through $columns {
        $val: ( 100% / $columns ) * $i;

        .col-#{$i}-#{$columns} {
           width: $val;
        }
    }

    @for $i from 1 through $columns {
        $val: ( 100% / $columns ) * $i;

        .col-1-#{$columns - $i + 1} {
           width: (100% / ($columns - $i + 1) );
        }
    }


    @for $i from 1 through ($columns - 1) {
        $val: ( 100% / $columns ) * $i;

        .offset-#{$i}-#{$columns} {
           margin-left: $val;
        }
    }

    @for $i from 1 through ($columns - 1) {
        $val: ( 100% / $columns ) * $i;

        .offset-1-#{$columns - $i + 1} {
           margin-left: (100% / ($columns - $i + 1) );
        }
    }


    [class|=col] [class|=col]{
        margin-bottom: 0;
    }

}

@media screen and (min-width: $lg-bp) {

}

/* -------------------------------------------------------------------------
 Grid Helper Classes
---------------------------------------------------------------------------- */

.float-right{
    float: right;
}

/* -------------------------------------------------------------------------
 Presentation only
---------------------------------------------------------------------------- */

[class|=col]{
}

.pres-spacing{
    height: 100px;
}

.pres-heading{
    line-height: 100px;
}

[class|=col] h3{
    text-align: center;
    padding: 0;
    margin: 0;
    line-height: 40px;
    font-size: 13px;
}

